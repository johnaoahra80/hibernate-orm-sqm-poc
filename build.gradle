buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name 'jboss-nexus'
			url "http://repository.jboss.org/nexus/content/groups/public/"
		}
		maven {
			name "jboss-snapshots"
			url "http://snapshots.jboss.org/maven2/"
		}
	}
	dependencies {
		classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
		classpath 'org.hibernate.build.gradle:gradle-animalSniffer-plugin:1.0.1.Final'
	}
}

apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'org.hibernate.build.gradle.animalSniffer'

apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'

apply plugin: 'idea'

sourceCompatibility = 1.6
version = '1.0'

repositories {
    mavenCentral()
	jcenter()
}

configurations {
	provided {
		// todo : need to make sure these are non-exported
		description = 'Non-exported compile-time dependencies.'
	}
}

dependencies {
	compile 'org.jboss.logging:jboss-logging:3.3.0.Final'

	provided 'org.jboss.logging:jboss-logging-annotations:2.0.0.Final'

	antlr 'org.antlr:antlr4:4.5'

	animalSnifferSignature 'org.codehaus.mojo.signature:java16:1.0@signature'

	runtime 'org.antlr:antlr4-runtime:4.5'

    testCompile group: 'junit', name: 'junit', version: '4.11'

	testRuntime 'log4j:log4j:1.2.17'

	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final'

	compile  'org.hibernate:hibernate-core:5.0.0.CR3'

	compile  'org.hibernate:hibernate-entitymanager:5.0.0.CR3'

	testRuntime 'com.h2database:h2:1.3.176'
}

tasks.generateGrammarSource {
	outputDirectory = file( "${outputDirectory}/org/hibernate/hql/parser/antlr" )
	// ugh!  https://discuss.gradle.org/t/antlr-v4-visitor-generation/10017/1
	if ( arguments == null ) {
		arguments = ['-visitor']
	}
	else {
		arguments += ['-visitor']
	}
}

task compile
tasks.withType( JavaCompile ).each {
	tasks.compile.dependsOn it
	it.options.compilerArgs += [
			"-nowarn",
			"-encoding", "UTF-8"
	]
}

task wrapper(type: Wrapper) {
	gradleVersion = 2.4
}

idea {
	module {
		jdkName = sourceCompatibility

		excludeDirs = [file( ".gradle" )]
		excludeDirs += file( "$buildDir/classes" )
		excludeDirs += file( "$buildDir/packages" )
		excludeDirs += file( "$buildDir/dependency-cache" )
		excludeDirs += file( "$buildDir/libs" )
		excludeDirs += file( "$buildDir/reports" )
		excludeDirs += file( "$buildDir/resources" )
		excludeDirs += file( "$buildDir/test-results" )
		excludeDirs += file( "$buildDir/tmp" )

		downloadSources = true
	}
}